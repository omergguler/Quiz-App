@page "/take-quiz"
@model PropayTest.Pages.TakeQuiz.TakeQuizModel
@{
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Take Quiz</title>
    <link rel="stylesheet" href="~/css/TakeQuiz.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.8/umd/popper.min.js"></script>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


</head>

<body>
    <script src="https://unpkg.com/ionicons@4.5.10-0/dist/ionicons.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
    @if (Model.User != null)
    {
        <div id="firstModal" class="modal">
            <div class="modal-content">
                <h1>Finished Quiz!</h1>
                <div>
                    @if(true)
                    {
                        <div>@Model.errorMessage</div>
                    }
                    <h3>Correct Answer: <span id="correctCount">@TempData["CorrectAnswerCount"]</span></h3>
                    <h3>Wrong Answers: <span id="wrongCount">@TempData["WrongAnswerCount"]</span></h3>
                </div>
                <a class="return-quiz" href="/browse">return to quizzes</a>
                
            </div>
        </div>

        <form id="autoSubmitForm" method="post" class="timer">
            <input type="hidden" name="yourFieldName" value="someValue" />

            <p>Time left: <span id="countdown">5:00</span></p>
        </form>
        <form method="post" id="quizForm" asp-page-handler="SubmitQuiz">
            <input type="hidden" name="answersJson" id="answersJson">
            <input type="hidden" name="qid" id="qid" value="@Model.QuizId">
            <button type="submit" id="submitBtn" style="display:none;">Submit</button>
        </form>
     
        <div class="intro">
            <h1>@Model.Quiz.Title</h1>
            <h4>@Model.Quiz.Description</h4>
            <h6>There are @Model.Questions.Count questions in this quiz</h6>
        </div>
        
        <div class="list-container">
            <div class="scroll-list">
                @foreach (var question in Model.Questions)
                {
                    <div class="scroll-item" data-question-id="@question.QuestionId">
                         <p class="category">Category: @question.Category</p>
                        <div>
                            <h5 class="question" style="text-align: center;">@question.QuestionText</h5>
                        </div>

                        <div class="choices-container">
                            <div class="choice" data-choice="1" data-question-id="@question.QuestionId">
                                @question.Choice1
                            </div>
                            <div class="choice" data-choice="2" data-question-id="@question.QuestionId">
                                @question.Choice2
                            </div>
                            <div class="choice" data-choice="3" data-question-id="@question.QuestionId">
                                @question.Choice3
                            </div>
                            <div class="choice" data-choice="4" data-question-id="@question.QuestionId">
                                @question.Choice4
                            </div>
                        </div>

                    </div>
                }
            </div>
        </div>
        <button class="submit-btn" onclick="submitQuiz()">
            Finish Quiz
        </button>
    }
    else
    {
        <h1>User session not found</h1>
    }

    <script>
        var firstModal = document.getElementById("firstModal");
        var state = "@TempData["State"]";
        console.log(":= " + state);
        if (state === "result") {
            firstModal.style.display = "flex";
        }
        function startTimer(duration) {
            var timer = duration; 
            var display = document.getElementById('countdown'); 
            var countdownInterval = setInterval(function () {
                
                var minutes = Math.floor(timer / 60);
                var seconds = timer % 60;

                
                seconds = seconds < 10 ? '0' + seconds : seconds;

                
                display.textContent = minutes + ":" + seconds;

                
                if (timer <= 0) {
                    clearInterval(countdownInterval); 
                    document.getElementById("autoSubmitForm").submit(); 
                }

                timer--;
            }, 1000);
        }

        window.onload = function () {
            var countdownTime = 5 * 60;
            if (state !== "result") {
                startTimer(countdownTime);
            }
        };
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
           
            const scrollItems = document.querySelectorAll('.scroll-item');

            scrollItems.forEach(function (item) {
                
                const choices = item.querySelectorAll('.choice');

                choices.forEach(function (choice) {
                    choice.addEventListener('click', function () {
                        
                        choices.forEach(c => c.classList.remove('choice-picked'));

                        this.classList.add('choice-picked');
                    });
                });
            });
        });
    </script>

    <script>
        function submitQuiz() {
            const scrollItems = document.querySelectorAll('.scroll-item');
            let allAnswered = true;
            let answers = [];

            

            scrollItems.forEach(function (item) {
                const questionId = item.getAttribute('data-question-id');
                const choices = item.querySelectorAll('.choice');
                const selectedChoice = Array.from(choices).find(choice => choice.classList.contains('choice-picked'));

                if (selectedChoice) {
                    const answer = {
                        questionId: questionId,
                        choice: selectedChoice.textContent.trim() 
                    };
                    answers.push(answer); 
                    item.style.borderColor = 'black'; 
                } else {
                    allAnswered = false;
                    item.style.borderColor = 'red';  
                }
            });

            if (allAnswered) {
                console.log(answers);
                document.getElementById('answersJson').value = JSON.stringify(answers);
                document.getElementById('submitBtn').click();

            } else {
                alert("Please answer all the questions.");
            }
        }
    </script>
</body>

</html>